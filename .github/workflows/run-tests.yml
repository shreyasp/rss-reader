name: Run tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     image: postgres
    #     env:
    #       POSTGRES_PASSWORD: postgres
    #       options: >-
    #         --health-cmd pg_isready
    #         --health-interval 10s
    #         --health-timeout 5s
    #         --health-retries 5
    #       ports:
    #         5432:5432
    #   redis:
    #     image: redis
    #     env:
    #       options: >-
    #         --health-cmd "redis-cli ping"
    #         --health-interval 10s
    #         --health-timeout 5s
    #         --health-retries 5
    #       ports:
    #         6379:6379
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: 'x64'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
      - name: Install Pytest
        run: pip install pytest pytest-cov httpx
      # - name: Test Application
      #   env:
      #     APP_MODE: test
      #   run: pytest -v --junitxml=junit/test-results.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ github.run_number }}-${{ github.run_attempt }}
          path: junit/test-results.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
